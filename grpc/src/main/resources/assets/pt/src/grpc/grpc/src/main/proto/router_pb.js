// source: grpc/src/main/proto/router.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.router.FootLeg', null, global);
goog.exportSymbol('proto.router.InfoReply', null, global);
goog.exportSymbol('proto.router.InfoRequest', null, global);
goog.exportSymbol('proto.router.MatrixRouteReply', null, global);
goog.exportSymbol('proto.router.MatrixRouteRequest', null, global);
goog.exportSymbol('proto.router.MatrixRow', null, global);
goog.exportSymbol('proto.router.Point', null, global);
goog.exportSymbol('proto.router.PtLeg', null, global);
goog.exportSymbol('proto.router.PtPath', null, global);
goog.exportSymbol('proto.router.PtRouteReply', null, global);
goog.exportSymbol('proto.router.PtRouteRequest', null, global);
goog.exportSymbol('proto.router.Stop', null, global);
goog.exportSymbol('proto.router.StreetPath', null, global);
goog.exportSymbol('proto.router.StreetRouteReply', null, global);
goog.exportSymbol('proto.router.StreetRouteRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.InfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.router.InfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.InfoRequest.displayName = 'proto.router.InfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.InfoReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.router.InfoReply.repeatedFields_, null);
};
goog.inherits(proto.router.InfoReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.InfoReply.displayName = 'proto.router.InfoReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.Point = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.router.Point, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.Point.displayName = 'proto.router.Point';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.StreetRouteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.router.StreetRouteRequest.repeatedFields_, null);
};
goog.inherits(proto.router.StreetRouteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.StreetRouteRequest.displayName = 'proto.router.StreetRouteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.StreetRouteReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.router.StreetRouteReply.repeatedFields_, null);
};
goog.inherits(proto.router.StreetRouteReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.StreetRouteReply.displayName = 'proto.router.StreetRouteReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.StreetPath = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.router.StreetPath.repeatedFields_, null);
};
goog.inherits(proto.router.StreetPath, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.StreetPath.displayName = 'proto.router.StreetPath';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.PtRouteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.router.PtRouteRequest.repeatedFields_, null);
};
goog.inherits(proto.router.PtRouteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.PtRouteRequest.displayName = 'proto.router.PtRouteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.PtRouteReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.router.PtRouteReply.repeatedFields_, null);
};
goog.inherits(proto.router.PtRouteReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.PtRouteReply.displayName = 'proto.router.PtRouteReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.PtPath = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.router.PtPath.repeatedFields_, null);
};
goog.inherits(proto.router.PtPath, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.PtPath.displayName = 'proto.router.PtPath';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.FootLeg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.router.FootLeg.repeatedFields_, null);
};
goog.inherits(proto.router.FootLeg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.FootLeg.displayName = 'proto.router.FootLeg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.PtLeg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.router.PtLeg.repeatedFields_, null);
};
goog.inherits(proto.router.PtLeg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.PtLeg.displayName = 'proto.router.PtLeg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.Stop = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.router.Stop, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.Stop.displayName = 'proto.router.Stop';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.MatrixRouteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.router.MatrixRouteRequest.repeatedFields_, null);
};
goog.inherits(proto.router.MatrixRouteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.MatrixRouteRequest.displayName = 'proto.router.MatrixRouteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.MatrixRouteReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.router.MatrixRouteReply.repeatedFields_, null);
};
goog.inherits(proto.router.MatrixRouteReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.MatrixRouteReply.displayName = 'proto.router.MatrixRouteReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.MatrixRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.router.MatrixRow.repeatedFields_, null);
};
goog.inherits(proto.router.MatrixRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.router.MatrixRow.displayName = 'proto.router.MatrixRow';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.InfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.router.InfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.InfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.InfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.InfoRequest}
 */
proto.router.InfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.InfoRequest;
  return proto.router.InfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.InfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.InfoRequest}
 */
proto.router.InfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.InfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.InfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.InfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.InfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.router.InfoReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.InfoReply.prototype.toObject = function(opt_includeInstance) {
  return proto.router.InfoReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.InfoReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.InfoReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    bboxList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.InfoReply}
 */
proto.router.InfoReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.InfoReply;
  return proto.router.InfoReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.InfoReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.InfoReply}
 */
proto.router.InfoReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBbox(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.InfoReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.InfoReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.InfoReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.InfoReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBboxList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
};


/**
 * repeated double bbox = 1;
 * @return {!Array<number>}
 */
proto.router.InfoReply.prototype.getBboxList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.router.InfoReply} returns this
 */
proto.router.InfoReply.prototype.setBboxList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.router.InfoReply} returns this
 */
proto.router.InfoReply.prototype.addBbox = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.InfoReply} returns this
 */
proto.router.InfoReply.prototype.clearBboxList = function() {
  return this.setBboxList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.Point.prototype.toObject = function(opt_includeInstance) {
  return proto.router.Point.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.Point} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.Point.toObject = function(includeInstance, msg) {
  var f, obj = {
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    lon: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.Point}
 */
proto.router.Point.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.Point;
  return proto.router.Point.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.Point} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.Point}
 */
proto.router.Point.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.Point.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.Point.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.Point} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.Point.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLon();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double lat = 1;
 * @return {number}
 */
proto.router.Point.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.router.Point} returns this
 */
proto.router.Point.prototype.setLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double lon = 2;
 * @return {number}
 */
proto.router.Point.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.router.Point} returns this
 */
proto.router.Point.prototype.setLon = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.router.StreetRouteRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.StreetRouteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.router.StreetRouteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.StreetRouteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.StreetRouteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    profile: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pointsList: jspb.Message.toObjectList(msg.getPointsList(),
    proto.router.Point.toObject, includeInstance),
    alternateRouteMaxPaths: jspb.Message.getFieldWithDefault(msg, 3, 0),
    alternateRouteMaxWeightFactor: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    alternateRouteMaxShareFactor: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.StreetRouteRequest}
 */
proto.router.StreetRouteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.StreetRouteRequest;
  return proto.router.StreetRouteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.StreetRouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.StreetRouteRequest}
 */
proto.router.StreetRouteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfile(value);
      break;
    case 2:
      var value = new proto.router.Point;
      reader.readMessage(value,proto.router.Point.deserializeBinaryFromReader);
      msg.addPoints(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAlternateRouteMaxPaths(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAlternateRouteMaxWeightFactor(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAlternateRouteMaxShareFactor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.StreetRouteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.StreetRouteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.StreetRouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.StreetRouteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfile();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.router.Point.serializeBinaryToWriter
    );
  }
  f = message.getAlternateRouteMaxPaths();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getAlternateRouteMaxWeightFactor();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getAlternateRouteMaxShareFactor();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional string profile = 1;
 * @return {string}
 */
proto.router.StreetRouteRequest.prototype.getProfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.StreetRouteRequest} returns this
 */
proto.router.StreetRouteRequest.prototype.setProfile = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Point points = 2;
 * @return {!Array<!proto.router.Point>}
 */
proto.router.StreetRouteRequest.prototype.getPointsList = function() {
  return /** @type{!Array<!proto.router.Point>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.router.Point, 2));
};


/**
 * @param {!Array<!proto.router.Point>} value
 * @return {!proto.router.StreetRouteRequest} returns this
*/
proto.router.StreetRouteRequest.prototype.setPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.router.Point=} opt_value
 * @param {number=} opt_index
 * @return {!proto.router.Point}
 */
proto.router.StreetRouteRequest.prototype.addPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.router.Point, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.StreetRouteRequest} returns this
 */
proto.router.StreetRouteRequest.prototype.clearPointsList = function() {
  return this.setPointsList([]);
};


/**
 * optional int32 alternate_route_max_paths = 3;
 * @return {number}
 */
proto.router.StreetRouteRequest.prototype.getAlternateRouteMaxPaths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.router.StreetRouteRequest} returns this
 */
proto.router.StreetRouteRequest.prototype.setAlternateRouteMaxPaths = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double alternate_route_max_weight_factor = 4;
 * @return {number}
 */
proto.router.StreetRouteRequest.prototype.getAlternateRouteMaxWeightFactor = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.router.StreetRouteRequest} returns this
 */
proto.router.StreetRouteRequest.prototype.setAlternateRouteMaxWeightFactor = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double alternate_route_max_share_factor = 5;
 * @return {number}
 */
proto.router.StreetRouteRequest.prototype.getAlternateRouteMaxShareFactor = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.router.StreetRouteRequest} returns this
 */
proto.router.StreetRouteRequest.prototype.setAlternateRouteMaxShareFactor = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.router.StreetRouteReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.StreetRouteReply.prototype.toObject = function(opt_includeInstance) {
  return proto.router.StreetRouteReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.StreetRouteReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.StreetRouteReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathsList: jspb.Message.toObjectList(msg.getPathsList(),
    proto.router.StreetPath.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.StreetRouteReply}
 */
proto.router.StreetRouteReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.StreetRouteReply;
  return proto.router.StreetRouteReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.StreetRouteReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.StreetRouteReply}
 */
proto.router.StreetRouteReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.router.StreetPath;
      reader.readMessage(value,proto.router.StreetPath.deserializeBinaryFromReader);
      msg.addPaths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.StreetRouteReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.StreetRouteReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.StreetRouteReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.StreetRouteReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPathsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.router.StreetPath.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StreetPath paths = 1;
 * @return {!Array<!proto.router.StreetPath>}
 */
proto.router.StreetRouteReply.prototype.getPathsList = function() {
  return /** @type{!Array<!proto.router.StreetPath>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.router.StreetPath, 1));
};


/**
 * @param {!Array<!proto.router.StreetPath>} value
 * @return {!proto.router.StreetRouteReply} returns this
*/
proto.router.StreetRouteReply.prototype.setPathsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.router.StreetPath=} opt_value
 * @param {number=} opt_index
 * @return {!proto.router.StreetPath}
 */
proto.router.StreetRouteReply.prototype.addPaths = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.router.StreetPath, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.StreetRouteReply} returns this
 */
proto.router.StreetRouteReply.prototype.clearPathsList = function() {
  return this.setPathsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.router.StreetPath.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.StreetPath.prototype.toObject = function(opt_includeInstance) {
  return proto.router.StreetPath.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.StreetPath} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.StreetPath.toObject = function(includeInstance, msg) {
  var f, obj = {
    durationMillis: jspb.Message.getFieldWithDefault(msg, 1, 0),
    distanceMeters: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    stableEdgeIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    edgeDurationsMillisList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    points: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.StreetPath}
 */
proto.router.StreetPath.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.StreetPath;
  return proto.router.StreetPath.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.StreetPath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.StreetPath}
 */
proto.router.StreetPath.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDurationMillis(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceMeters(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addStableEdgeIds(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addEdgeDurationsMillis(values[i]);
      }
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.StreetPath.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.StreetPath.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.StreetPath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.StreetPath.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDurationMillis();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDistanceMeters();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getStableEdgeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getEdgeDurationsMillisList();
  if (f.length > 0) {
    writer.writePackedInt64(
      4,
      f
    );
  }
  f = message.getPoints();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 duration_millis = 1;
 * @return {number}
 */
proto.router.StreetPath.prototype.getDurationMillis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.router.StreetPath} returns this
 */
proto.router.StreetPath.prototype.setDurationMillis = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double distance_meters = 2;
 * @return {number}
 */
proto.router.StreetPath.prototype.getDistanceMeters = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.router.StreetPath} returns this
 */
proto.router.StreetPath.prototype.setDistanceMeters = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * repeated string stable_edge_ids = 3;
 * @return {!Array<string>}
 */
proto.router.StreetPath.prototype.getStableEdgeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.router.StreetPath} returns this
 */
proto.router.StreetPath.prototype.setStableEdgeIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.router.StreetPath} returns this
 */
proto.router.StreetPath.prototype.addStableEdgeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.StreetPath} returns this
 */
proto.router.StreetPath.prototype.clearStableEdgeIdsList = function() {
  return this.setStableEdgeIdsList([]);
};


/**
 * repeated int64 edge_durations_millis = 4;
 * @return {!Array<number>}
 */
proto.router.StreetPath.prototype.getEdgeDurationsMillisList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.router.StreetPath} returns this
 */
proto.router.StreetPath.prototype.setEdgeDurationsMillisList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.router.StreetPath} returns this
 */
proto.router.StreetPath.prototype.addEdgeDurationsMillis = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.StreetPath} returns this
 */
proto.router.StreetPath.prototype.clearEdgeDurationsMillisList = function() {
  return this.setEdgeDurationsMillisList([]);
};


/**
 * optional string points = 5;
 * @return {string}
 */
proto.router.StreetPath.prototype.getPoints = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.StreetPath} returns this
 */
proto.router.StreetPath.prototype.setPoints = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.router.PtRouteRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.PtRouteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.router.PtRouteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.PtRouteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.PtRouteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsList: jspb.Message.toObjectList(msg.getPointsList(),
    proto.router.Point.toObject, includeInstance),
    earliestDepartureTime: (f = msg.getEarliestDepartureTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    limitSolutions: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxProfileDuration: jspb.Message.getFieldWithDefault(msg, 4, 0),
    betaWalkTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.PtRouteRequest}
 */
proto.router.PtRouteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.PtRouteRequest;
  return proto.router.PtRouteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.PtRouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.PtRouteRequest}
 */
proto.router.PtRouteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.router.Point;
      reader.readMessage(value,proto.router.Point.deserializeBinaryFromReader);
      msg.addPoints(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEarliestDepartureTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimitSolutions(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxProfileDuration(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBetaWalkTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.PtRouteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.PtRouteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.PtRouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.PtRouteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.router.Point.serializeBinaryToWriter
    );
  }
  f = message.getEarliestDepartureTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLimitSolutions();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMaxProfileDuration();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getBetaWalkTime();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * repeated Point points = 1;
 * @return {!Array<!proto.router.Point>}
 */
proto.router.PtRouteRequest.prototype.getPointsList = function() {
  return /** @type{!Array<!proto.router.Point>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.router.Point, 1));
};


/**
 * @param {!Array<!proto.router.Point>} value
 * @return {!proto.router.PtRouteRequest} returns this
*/
proto.router.PtRouteRequest.prototype.setPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.router.Point=} opt_value
 * @param {number=} opt_index
 * @return {!proto.router.Point}
 */
proto.router.PtRouteRequest.prototype.addPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.router.Point, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.PtRouteRequest} returns this
 */
proto.router.PtRouteRequest.prototype.clearPointsList = function() {
  return this.setPointsList([]);
};


/**
 * optional google.protobuf.Timestamp earliest_departure_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.router.PtRouteRequest.prototype.getEarliestDepartureTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.router.PtRouteRequest} returns this
*/
proto.router.PtRouteRequest.prototype.setEarliestDepartureTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.router.PtRouteRequest} returns this
 */
proto.router.PtRouteRequest.prototype.clearEarliestDepartureTime = function() {
  return this.setEarliestDepartureTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.router.PtRouteRequest.prototype.hasEarliestDepartureTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 limit_solutions = 3;
 * @return {number}
 */
proto.router.PtRouteRequest.prototype.getLimitSolutions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.router.PtRouteRequest} returns this
 */
proto.router.PtRouteRequest.prototype.setLimitSolutions = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 max_profile_duration = 4;
 * @return {number}
 */
proto.router.PtRouteRequest.prototype.getMaxProfileDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.router.PtRouteRequest} returns this
 */
proto.router.PtRouteRequest.prototype.setMaxProfileDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double beta_walk_time = 5;
 * @return {number}
 */
proto.router.PtRouteRequest.prototype.getBetaWalkTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.router.PtRouteRequest} returns this
 */
proto.router.PtRouteRequest.prototype.setBetaWalkTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.router.PtRouteReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.PtRouteReply.prototype.toObject = function(opt_includeInstance) {
  return proto.router.PtRouteReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.PtRouteReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.PtRouteReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathsList: jspb.Message.toObjectList(msg.getPathsList(),
    proto.router.PtPath.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.PtRouteReply}
 */
proto.router.PtRouteReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.PtRouteReply;
  return proto.router.PtRouteReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.PtRouteReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.PtRouteReply}
 */
proto.router.PtRouteReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.router.PtPath;
      reader.readMessage(value,proto.router.PtPath.deserializeBinaryFromReader);
      msg.addPaths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.PtRouteReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.PtRouteReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.PtRouteReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.PtRouteReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPathsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.router.PtPath.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PtPath paths = 1;
 * @return {!Array<!proto.router.PtPath>}
 */
proto.router.PtRouteReply.prototype.getPathsList = function() {
  return /** @type{!Array<!proto.router.PtPath>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.router.PtPath, 1));
};


/**
 * @param {!Array<!proto.router.PtPath>} value
 * @return {!proto.router.PtRouteReply} returns this
*/
proto.router.PtRouteReply.prototype.setPathsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.router.PtPath=} opt_value
 * @param {number=} opt_index
 * @return {!proto.router.PtPath}
 */
proto.router.PtRouteReply.prototype.addPaths = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.router.PtPath, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.PtRouteReply} returns this
 */
proto.router.PtRouteReply.prototype.clearPathsList = function() {
  return this.setPathsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.router.PtPath.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.PtPath.prototype.toObject = function(opt_includeInstance) {
  return proto.router.PtPath.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.PtPath} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.PtPath.toObject = function(includeInstance, msg) {
  var f, obj = {
    durationMillis: jspb.Message.getFieldWithDefault(msg, 1, 0),
    distanceMeters: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    transfers: jspb.Message.getFieldWithDefault(msg, 3, 0),
    footLegsList: jspb.Message.toObjectList(msg.getFootLegsList(),
    proto.router.FootLeg.toObject, includeInstance),
    ptLegsList: jspb.Message.toObjectList(msg.getPtLegsList(),
    proto.router.PtLeg.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.PtPath}
 */
proto.router.PtPath.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.PtPath;
  return proto.router.PtPath.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.PtPath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.PtPath}
 */
proto.router.PtPath.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDurationMillis(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceMeters(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTransfers(value);
      break;
    case 4:
      var value = new proto.router.FootLeg;
      reader.readMessage(value,proto.router.FootLeg.deserializeBinaryFromReader);
      msg.addFootLegs(value);
      break;
    case 5:
      var value = new proto.router.PtLeg;
      reader.readMessage(value,proto.router.PtLeg.deserializeBinaryFromReader);
      msg.addPtLegs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.PtPath.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.PtPath.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.PtPath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.PtPath.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDurationMillis();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDistanceMeters();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getTransfers();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFootLegsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.router.FootLeg.serializeBinaryToWriter
    );
  }
  f = message.getPtLegsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.router.PtLeg.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 duration_millis = 1;
 * @return {number}
 */
proto.router.PtPath.prototype.getDurationMillis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.router.PtPath} returns this
 */
proto.router.PtPath.prototype.setDurationMillis = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double distance_meters = 2;
 * @return {number}
 */
proto.router.PtPath.prototype.getDistanceMeters = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.router.PtPath} returns this
 */
proto.router.PtPath.prototype.setDistanceMeters = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int32 transfers = 3;
 * @return {number}
 */
proto.router.PtPath.prototype.getTransfers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.router.PtPath} returns this
 */
proto.router.PtPath.prototype.setTransfers = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated FootLeg foot_legs = 4;
 * @return {!Array<!proto.router.FootLeg>}
 */
proto.router.PtPath.prototype.getFootLegsList = function() {
  return /** @type{!Array<!proto.router.FootLeg>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.router.FootLeg, 4));
};


/**
 * @param {!Array<!proto.router.FootLeg>} value
 * @return {!proto.router.PtPath} returns this
*/
proto.router.PtPath.prototype.setFootLegsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.router.FootLeg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.router.FootLeg}
 */
proto.router.PtPath.prototype.addFootLegs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.router.FootLeg, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.PtPath} returns this
 */
proto.router.PtPath.prototype.clearFootLegsList = function() {
  return this.setFootLegsList([]);
};


/**
 * repeated PtLeg pt_legs = 5;
 * @return {!Array<!proto.router.PtLeg>}
 */
proto.router.PtPath.prototype.getPtLegsList = function() {
  return /** @type{!Array<!proto.router.PtLeg>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.router.PtLeg, 5));
};


/**
 * @param {!Array<!proto.router.PtLeg>} value
 * @return {!proto.router.PtPath} returns this
*/
proto.router.PtPath.prototype.setPtLegsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.router.PtLeg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.router.PtLeg}
 */
proto.router.PtPath.prototype.addPtLegs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.router.PtLeg, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.PtPath} returns this
 */
proto.router.PtPath.prototype.clearPtLegsList = function() {
  return this.setPtLegsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.router.FootLeg.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.FootLeg.prototype.toObject = function(opt_includeInstance) {
  return proto.router.FootLeg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.FootLeg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.FootLeg.toObject = function(includeInstance, msg) {
  var f, obj = {
    departureTime: (f = msg.getDepartureTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    arrivalTime: (f = msg.getArrivalTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    distanceMeters: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    stableEdgeIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    travelSegmentType: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.FootLeg}
 */
proto.router.FootLeg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.FootLeg;
  return proto.router.FootLeg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.FootLeg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.FootLeg}
 */
proto.router.FootLeg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDepartureTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setArrivalTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceMeters(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addStableEdgeIds(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTravelSegmentType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.FootLeg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.FootLeg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.FootLeg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.FootLeg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDepartureTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getArrivalTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDistanceMeters();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getStableEdgeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getTravelSegmentType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp departure_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.router.FootLeg.prototype.getDepartureTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.router.FootLeg} returns this
*/
proto.router.FootLeg.prototype.setDepartureTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.router.FootLeg} returns this
 */
proto.router.FootLeg.prototype.clearDepartureTime = function() {
  return this.setDepartureTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.router.FootLeg.prototype.hasDepartureTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp arrival_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.router.FootLeg.prototype.getArrivalTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.router.FootLeg} returns this
*/
proto.router.FootLeg.prototype.setArrivalTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.router.FootLeg} returns this
 */
proto.router.FootLeg.prototype.clearArrivalTime = function() {
  return this.setArrivalTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.router.FootLeg.prototype.hasArrivalTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double distance_meters = 3;
 * @return {number}
 */
proto.router.FootLeg.prototype.getDistanceMeters = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.router.FootLeg} returns this
 */
proto.router.FootLeg.prototype.setDistanceMeters = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * repeated string stable_edge_ids = 4;
 * @return {!Array<string>}
 */
proto.router.FootLeg.prototype.getStableEdgeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.router.FootLeg} returns this
 */
proto.router.FootLeg.prototype.setStableEdgeIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.router.FootLeg} returns this
 */
proto.router.FootLeg.prototype.addStableEdgeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.FootLeg} returns this
 */
proto.router.FootLeg.prototype.clearStableEdgeIdsList = function() {
  return this.setStableEdgeIdsList([]);
};


/**
 * optional string travel_segment_type = 5;
 * @return {string}
 */
proto.router.FootLeg.prototype.getTravelSegmentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.FootLeg} returns this
 */
proto.router.FootLeg.prototype.setTravelSegmentType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.router.PtLeg.repeatedFields_ = [4,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.PtLeg.prototype.toObject = function(opt_includeInstance) {
  return proto.router.PtLeg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.PtLeg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.PtLeg.toObject = function(includeInstance, msg) {
  var f, obj = {
    departureTime: (f = msg.getDepartureTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    arrivalTime: (f = msg.getArrivalTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    distanceMeters: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    stableEdgeIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    tripId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    routeId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    agencyName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    routeShortName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    routeLongName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    routeType: jspb.Message.getFieldWithDefault(msg, 10, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 11, ""),
    stopsList: jspb.Message.toObjectList(msg.getStopsList(),
    proto.router.Stop.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.PtLeg}
 */
proto.router.PtLeg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.PtLeg;
  return proto.router.PtLeg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.PtLeg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.PtLeg}
 */
proto.router.PtLeg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDepartureTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setArrivalTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceMeters(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addStableEdgeIds(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTripId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRouteId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAgencyName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRouteShortName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRouteLongName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setRouteType(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirection(value);
      break;
    case 12:
      var value = new proto.router.Stop;
      reader.readMessage(value,proto.router.Stop.deserializeBinaryFromReader);
      msg.addStops(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.PtLeg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.PtLeg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.PtLeg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.PtLeg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDepartureTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getArrivalTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDistanceMeters();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getStableEdgeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getTripId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRouteId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAgencyName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRouteShortName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRouteLongName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getRouteType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDirection();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getStopsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.router.Stop.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp departure_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.router.PtLeg.prototype.getDepartureTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.router.PtLeg} returns this
*/
proto.router.PtLeg.prototype.setDepartureTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.clearDepartureTime = function() {
  return this.setDepartureTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.router.PtLeg.prototype.hasDepartureTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp arrival_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.router.PtLeg.prototype.getArrivalTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.router.PtLeg} returns this
*/
proto.router.PtLeg.prototype.setArrivalTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.clearArrivalTime = function() {
  return this.setArrivalTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.router.PtLeg.prototype.hasArrivalTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double distance_meters = 3;
 * @return {number}
 */
proto.router.PtLeg.prototype.getDistanceMeters = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.setDistanceMeters = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * repeated string stable_edge_ids = 4;
 * @return {!Array<string>}
 */
proto.router.PtLeg.prototype.getStableEdgeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.setStableEdgeIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.addStableEdgeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.clearStableEdgeIdsList = function() {
  return this.setStableEdgeIdsList([]);
};


/**
 * optional string trip_id = 5;
 * @return {string}
 */
proto.router.PtLeg.prototype.getTripId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.setTripId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string route_id = 6;
 * @return {string}
 */
proto.router.PtLeg.prototype.getRouteId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.setRouteId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string agency_name = 7;
 * @return {string}
 */
proto.router.PtLeg.prototype.getAgencyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.setAgencyName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string route_short_name = 8;
 * @return {string}
 */
proto.router.PtLeg.prototype.getRouteShortName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.setRouteShortName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string route_long_name = 9;
 * @return {string}
 */
proto.router.PtLeg.prototype.getRouteLongName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.setRouteLongName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string route_type = 10;
 * @return {string}
 */
proto.router.PtLeg.prototype.getRouteType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.setRouteType = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string direction = 11;
 * @return {string}
 */
proto.router.PtLeg.prototype.getDirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.setDirection = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * repeated Stop stops = 12;
 * @return {!Array<!proto.router.Stop>}
 */
proto.router.PtLeg.prototype.getStopsList = function() {
  return /** @type{!Array<!proto.router.Stop>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.router.Stop, 12));
};


/**
 * @param {!Array<!proto.router.Stop>} value
 * @return {!proto.router.PtLeg} returns this
*/
proto.router.PtLeg.prototype.setStopsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.router.Stop=} opt_value
 * @param {number=} opt_index
 * @return {!proto.router.Stop}
 */
proto.router.PtLeg.prototype.addStops = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.router.Stop, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.PtLeg} returns this
 */
proto.router.PtLeg.prototype.clearStopsList = function() {
  return this.setStopsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.Stop.prototype.toObject = function(opt_includeInstance) {
  return proto.router.Stop.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.Stop} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.Stop.toObject = function(includeInstance, msg) {
  var f, obj = {
    stopId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stopName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    arrivalTime: (f = msg.getArrivalTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    departureTime: (f = msg.getDepartureTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    point: (f = msg.getPoint()) && proto.router.Point.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.Stop}
 */
proto.router.Stop.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.Stop;
  return proto.router.Stop.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.Stop} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.Stop}
 */
proto.router.Stop.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStopId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStopName(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setArrivalTime(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDepartureTime(value);
      break;
    case 5:
      var value = new proto.router.Point;
      reader.readMessage(value,proto.router.Point.deserializeBinaryFromReader);
      msg.setPoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.Stop.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.Stop.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.Stop} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.Stop.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStopId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStopName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArrivalTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDepartureTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPoint();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.router.Point.serializeBinaryToWriter
    );
  }
};


/**
 * optional string stop_id = 1;
 * @return {string}
 */
proto.router.Stop.prototype.getStopId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.Stop} returns this
 */
proto.router.Stop.prototype.setStopId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string stop_name = 2;
 * @return {string}
 */
proto.router.Stop.prototype.getStopName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.Stop} returns this
 */
proto.router.Stop.prototype.setStopName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp arrival_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.router.Stop.prototype.getArrivalTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.router.Stop} returns this
*/
proto.router.Stop.prototype.setArrivalTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.router.Stop} returns this
 */
proto.router.Stop.prototype.clearArrivalTime = function() {
  return this.setArrivalTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.router.Stop.prototype.hasArrivalTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp departure_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.router.Stop.prototype.getDepartureTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.router.Stop} returns this
*/
proto.router.Stop.prototype.setDepartureTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.router.Stop} returns this
 */
proto.router.Stop.prototype.clearDepartureTime = function() {
  return this.setDepartureTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.router.Stop.prototype.hasDepartureTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Point point = 5;
 * @return {?proto.router.Point}
 */
proto.router.Stop.prototype.getPoint = function() {
  return /** @type{?proto.router.Point} */ (
    jspb.Message.getWrapperField(this, proto.router.Point, 5));
};


/**
 * @param {?proto.router.Point|undefined} value
 * @return {!proto.router.Stop} returns this
*/
proto.router.Stop.prototype.setPoint = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.router.Stop} returns this
 */
proto.router.Stop.prototype.clearPoint = function() {
  return this.setPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.router.Stop.prototype.hasPoint = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.router.MatrixRouteRequest.repeatedFields_ = [1,2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.MatrixRouteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.router.MatrixRouteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.MatrixRouteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.MatrixRouteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromPointsList: jspb.Message.toObjectList(msg.getFromPointsList(),
    proto.router.Point.toObject, includeInstance),
    toPointsList: jspb.Message.toObjectList(msg.getToPointsList(),
    proto.router.Point.toObject, includeInstance),
    mode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    outArraysList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    failFast: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.MatrixRouteRequest}
 */
proto.router.MatrixRouteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.MatrixRouteRequest;
  return proto.router.MatrixRouteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.MatrixRouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.MatrixRouteRequest}
 */
proto.router.MatrixRouteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.router.Point;
      reader.readMessage(value,proto.router.Point.deserializeBinaryFromReader);
      msg.addFromPoints(value);
      break;
    case 2:
      var value = new proto.router.Point;
      reader.readMessage(value,proto.router.Point.deserializeBinaryFromReader);
      msg.addToPoints(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addOutArrays(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailFast(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.MatrixRouteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.MatrixRouteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.MatrixRouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.MatrixRouteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.router.Point.serializeBinaryToWriter
    );
  }
  f = message.getToPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.router.Point.serializeBinaryToWriter
    );
  }
  f = message.getMode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOutArraysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getFailFast();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * repeated Point from_points = 1;
 * @return {!Array<!proto.router.Point>}
 */
proto.router.MatrixRouteRequest.prototype.getFromPointsList = function() {
  return /** @type{!Array<!proto.router.Point>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.router.Point, 1));
};


/**
 * @param {!Array<!proto.router.Point>} value
 * @return {!proto.router.MatrixRouteRequest} returns this
*/
proto.router.MatrixRouteRequest.prototype.setFromPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.router.Point=} opt_value
 * @param {number=} opt_index
 * @return {!proto.router.Point}
 */
proto.router.MatrixRouteRequest.prototype.addFromPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.router.Point, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.MatrixRouteRequest} returns this
 */
proto.router.MatrixRouteRequest.prototype.clearFromPointsList = function() {
  return this.setFromPointsList([]);
};


/**
 * repeated Point to_points = 2;
 * @return {!Array<!proto.router.Point>}
 */
proto.router.MatrixRouteRequest.prototype.getToPointsList = function() {
  return /** @type{!Array<!proto.router.Point>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.router.Point, 2));
};


/**
 * @param {!Array<!proto.router.Point>} value
 * @return {!proto.router.MatrixRouteRequest} returns this
*/
proto.router.MatrixRouteRequest.prototype.setToPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.router.Point=} opt_value
 * @param {number=} opt_index
 * @return {!proto.router.Point}
 */
proto.router.MatrixRouteRequest.prototype.addToPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.router.Point, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.MatrixRouteRequest} returns this
 */
proto.router.MatrixRouteRequest.prototype.clearToPointsList = function() {
  return this.setToPointsList([]);
};


/**
 * optional string mode = 3;
 * @return {string}
 */
proto.router.MatrixRouteRequest.prototype.getMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.router.MatrixRouteRequest} returns this
 */
proto.router.MatrixRouteRequest.prototype.setMode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string out_arrays = 4;
 * @return {!Array<string>}
 */
proto.router.MatrixRouteRequest.prototype.getOutArraysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.router.MatrixRouteRequest} returns this
 */
proto.router.MatrixRouteRequest.prototype.setOutArraysList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.router.MatrixRouteRequest} returns this
 */
proto.router.MatrixRouteRequest.prototype.addOutArrays = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.MatrixRouteRequest} returns this
 */
proto.router.MatrixRouteRequest.prototype.clearOutArraysList = function() {
  return this.setOutArraysList([]);
};


/**
 * optional bool fail_fast = 5;
 * @return {boolean}
 */
proto.router.MatrixRouteRequest.prototype.getFailFast = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.router.MatrixRouteRequest} returns this
 */
proto.router.MatrixRouteRequest.prototype.setFailFast = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.router.MatrixRouteReply.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.MatrixRouteReply.prototype.toObject = function(opt_includeInstance) {
  return proto.router.MatrixRouteReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.MatrixRouteReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.MatrixRouteReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    distancesList: jspb.Message.toObjectList(msg.getDistancesList(),
    proto.router.MatrixRow.toObject, includeInstance),
    timesList: jspb.Message.toObjectList(msg.getTimesList(),
    proto.router.MatrixRow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.MatrixRouteReply}
 */
proto.router.MatrixRouteReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.MatrixRouteReply;
  return proto.router.MatrixRouteReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.MatrixRouteReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.MatrixRouteReply}
 */
proto.router.MatrixRouteReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.router.MatrixRow;
      reader.readMessage(value,proto.router.MatrixRow.deserializeBinaryFromReader);
      msg.addDistances(value);
      break;
    case 2:
      var value = new proto.router.MatrixRow;
      reader.readMessage(value,proto.router.MatrixRow.deserializeBinaryFromReader);
      msg.addTimes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.MatrixRouteReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.MatrixRouteReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.MatrixRouteReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.MatrixRouteReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDistancesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.router.MatrixRow.serializeBinaryToWriter
    );
  }
  f = message.getTimesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.router.MatrixRow.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MatrixRow distances = 1;
 * @return {!Array<!proto.router.MatrixRow>}
 */
proto.router.MatrixRouteReply.prototype.getDistancesList = function() {
  return /** @type{!Array<!proto.router.MatrixRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.router.MatrixRow, 1));
};


/**
 * @param {!Array<!proto.router.MatrixRow>} value
 * @return {!proto.router.MatrixRouteReply} returns this
*/
proto.router.MatrixRouteReply.prototype.setDistancesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.router.MatrixRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.router.MatrixRow}
 */
proto.router.MatrixRouteReply.prototype.addDistances = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.router.MatrixRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.MatrixRouteReply} returns this
 */
proto.router.MatrixRouteReply.prototype.clearDistancesList = function() {
  return this.setDistancesList([]);
};


/**
 * repeated MatrixRow times = 2;
 * @return {!Array<!proto.router.MatrixRow>}
 */
proto.router.MatrixRouteReply.prototype.getTimesList = function() {
  return /** @type{!Array<!proto.router.MatrixRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.router.MatrixRow, 2));
};


/**
 * @param {!Array<!proto.router.MatrixRow>} value
 * @return {!proto.router.MatrixRouteReply} returns this
*/
proto.router.MatrixRouteReply.prototype.setTimesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.router.MatrixRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.router.MatrixRow}
 */
proto.router.MatrixRouteReply.prototype.addTimes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.router.MatrixRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.MatrixRouteReply} returns this
 */
proto.router.MatrixRouteReply.prototype.clearTimesList = function() {
  return this.setTimesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.router.MatrixRow.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.MatrixRow.prototype.toObject = function(opt_includeInstance) {
  return proto.router.MatrixRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.MatrixRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.MatrixRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.MatrixRow}
 */
proto.router.MatrixRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.MatrixRow;
  return proto.router.MatrixRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.MatrixRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.MatrixRow}
 */
proto.router.MatrixRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.MatrixRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.MatrixRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.MatrixRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.MatrixRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 values = 1;
 * @return {!Array<number>}
 */
proto.router.MatrixRow.prototype.getValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.router.MatrixRow} returns this
 */
proto.router.MatrixRow.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.router.MatrixRow} returns this
 */
proto.router.MatrixRow.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.router.MatrixRow} returns this
 */
proto.router.MatrixRow.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


goog.object.extend(exports, proto.router);
