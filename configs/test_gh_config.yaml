# Configuration file for standard GraphHopper routers.
# 1 profile loaded with default speeds is defined for each vehicle type

graphhopper:
  datareader.file: {{ TEST_OSM }}
  gtfs.file: {{ TEST_GTFS }}
  gtfs.max_transfer_interpolation_walk_time_seconds: 300
  graph.location: transit_data/graphhopper
  routing.max_visited_nodes: 1500000
  graph.flag_encoders: car,bike,foot #,truck
  graph.encoded_values: road_class,road_class_link
  prepare.ch.threads: 16

  # Uncomment this if the export was done with turn-restriction-aware contraction hierarchies
  # prepare.ch.edge_based: edge_and_node
  # graph.flag_encoders: car|turn_costs=true
  # graph.bytes_for_flags: 64

  # Profiles specifying vehicle and weightings for each mode type.
  profiles:
    - name: car_local
      vehicle: car
      weighting: custom
      custom_model_file: ./test-data/local_car_custom_model.json # mvn tests run from the /web folder
    - name: car_freeway
      vehicle: car
      weighting: custom
      custom_model_file: ./test-data/freeway_car_custom_model.json # mvn tests run from the /web folder
    - name: bike
      vehicle: bike
      weighting: fastest
    - name: foot
      vehicle: foot
      weighting: fastest
    # - name: truck
    #   vehicle: truck
    #   weighting: fastest

  profiles_ch:
    - profile: car_local
    - profile: car_freeway
    - profile: bike
    - profile: foot
    # - profile: truck

server:
  min_threads: 4
  max_threads: 8
  application_connectors:
    - type: http
      port: 8998
      # for security reasons bind (localhost does not work with k8s svcs)
      bind_host: 0.0.0.0
      acceptor_threads: 1
      selector_threads: 2
      accept_queue_size: 8
  request_log:
    appenders: []
