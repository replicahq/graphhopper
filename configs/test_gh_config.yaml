# Configuration file for standard GraphHopper routers.
# 1 profile loaded with default speeds is defined for each vehicle type

graphhopper:
  datareader.file: {{ TEST_OSM }}
  gtfs.file: {{ TEST_GTFS }}

  gtfs.trip_based: true
  gtfs.schedule_day: 2019-10-13
  prepare.min_network_size: 800

  gtfs.max_transfer_interpolation_walk_time_seconds: 300
  graph.location: transit_data/graphhopper
  graph.vehicles: car,bike,foot,truck,small_truck
  graph.encoded_values: road_class,road_class_link
  prepare.ch.threads: 16
  import.osm.ignored_highways:

  # Specifies how many sources are used for each batch during matrix calculation when the RPHAST algorithm is used
  # (this is the default algorithm for most non-flexible settings). The value of this parameter can be anything
  # starting from one and correlates directly with the memory usage during the matrix calculation. The lower the value
  # the less memory will be needed. However, this parameter also affects matrix calculation time (for very low values
  # below ten the matrix calculation takes much longer, but too large values can also increase the calculation time).
  # Choose 250 unless you know better or a smaller value if you really want to reduce memory usage. Also see the
  # discussion in PR #288.
  matrix.rphast.sources_per_run: 250
  routing.round_trip.max_retries: 2
  routing.max_visited_nodes: 15000000
  matrix.default_customer_priority: 0

  # Uncomment this if the export was done with turn-restriction-aware contraction hierarchies
  # prepare.ch.edge_based: edge_and_node
  # graph.flag_encoders: car|turn_costs=true
  # graph.bytes_for_flags: 64

  # Profiles specifying vehicle and weightings for each mode type.
  custom_model_folder: ./test-data # mvn tests run from the /web folder
  profiles:
    - name: car_default  # needed for comparison against Thurton Drive custom speeds profile
      vehicle: car
      weighting: fastest
    - name: car  # "car" profile name required for PT routing with custom access/egress mode
      vehicle: car
      weighting: custom
      custom_model_files: [local_car_custom_model.json]
    - name: car_freeway
      vehicle: car
      weighting: custom
      custom_model_files: [freeway_car_custom_model.json]
    - name: car_custom_fast_thurton_drive
      vehicle: car_custom_fast_thurton_drive
      weighting: fastest
      # sets a very high speed for Thurton Drive in Roseville (OSM way id 10485465)
      custom_speed_file: test-data/custom_speeds/custom_fast_thurton_drive_speed.csv # mvn tests run from the /web folder
    - name: car_custom_closed_baseline_road
      vehicle: car_custom_closed_baseline_road
      weighting: fastest
      # sets a zero speed for a section of Baseline Road in Roseville (OSM way id 76254223)
      custom_speed_file: test-data/custom_speeds/baseline_road_zero_speed.csv # mvn tests run from the /web folder
    - name: bike
      vehicle: bike
      weighting: fastest
    - name: foot
      vehicle: foot
      weighting: fastest
    - name: truck
      vehicle: truck
      weighting: fastest
    - name: small_truck
      vehicle: small_truck
      weighting: fastest

  profiles_ch:
    - profile: car_default
    - profile: car
    - profile: car_freeway
    - profile: car_custom_fast_thurton_drive
    - profile: car_custom_closed_baseline_road
    - profile: bike
    - profile: foot
    - profile: truck
    - profile: small_truck

server:
  min_threads: 4
  max_threads: 8
  application_connectors:
    - type: http
      port: 8998
      # for security reasons bind (localhost does not work with k8s svcs)
      bind_host: 0.0.0.0
      acceptor_threads: 1
      selector_threads: 2
      accept_queue_size: 8
  request_log:
    appenders: []
