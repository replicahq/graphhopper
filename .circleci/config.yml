# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      # build package
      - run: mvn -Dmaven.test.skip=true -Dmaven.javadoc.skip=true package

      #  and run tests - doing this in one step will kill maven
      - run: mvn test

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run: mkdir ./data
      - run: mkdir ./graphhopper
      - run: cp -r ./graphhopper/* /tmp/graphhopper

      - persist_to_workspace:
          root: /tmp
          paths:
            - target

  publish-docker:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run: mkdir ./data
      - run: mkdir ./graphhopper
      - run: cp -r /tmp/graphhopper/* ./graphhopper
      - run: &setup_gcloud
          name: Setup gcloud
          command: |
            echo ${GCP_SERVICE_ACCOUNT_KEY} | base64 -d > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project nyc-tlc-1225
      - setup_remote_docker
      - run:
          name: Choose a tag
          command: git rev-parse --short=8 HEAD > /tmp/tag
      - run:
          name: Build image
          command: docker build . -f Dockerfile.model -t us.gcr.io/nyc-tlc-1225/gh:$(cat /tmp/tag)
      - run:
          name: Push image
          command: gcloud docker -- push us.gcr.io/nyc-tlc-1225/gh:$(cat /tmp/tag)

workflows:
  version: 2
  build-and-publish:
    jobs:
      - build
      - publish-docker:
          requires:
            - build
